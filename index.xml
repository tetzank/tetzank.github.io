<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dangerous Assembly</title><link>https://tetzank.github.io/</link><description>Recent content on Dangerous Assembly</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 07 Jan 2019 09:51:00 +0100</lastBuildDate><atom:link href="https://tetzank.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Identical Code Folding</title><link>https://tetzank.github.io/posts/identical-code-folding/</link><pubDate>Mon, 07 Jan 2019 09:51:00 +0100</pubDate><guid>https://tetzank.github.io/posts/identical-code-folding/</guid><description>Even more interesting than removing unused functions is consolidating identical instances of templated functions. For each template parameter, the compiler generates a new instance. In case of templated classes, it generates code per template parameter for every member function. The instances can have identical code, e.g., the member function is independent of the template parameters or the types are semantically equivalent for the applied operations. Let&amp;rsquo;s see if we can minimize the code explosion by deduplicating code when it is identical.</description></item><item><title>Removing Unused Code</title><link>https://tetzank.github.io/posts/removing-unused-code/</link><pubDate>Sat, 05 Jan 2019 23:25:03 +0100</pubDate><guid>https://tetzank.github.io/posts/removing-unused-code/</guid><description>I recently went on a little journey to get a better understanding of the linker used in C++. Like many other C++ developers, my mental model of what the linker actually does is very limited. But I&amp;rsquo;m always interested in learning new tricks about the tools I use regularly, especially new optimizations slumbering behind some obscure flag. In this post, we will have a look at the removal of unused functions from the executable and how the linker can help us with this task.</description></item></channel></rss>